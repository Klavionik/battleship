services:
  proxy:
    image: caddy/caddy:2.7.6-alpine
    command: ["caddy", "reverse-proxy", "--from", ":9090", "--to", "backend:8000"]
    ports:
      - "9090:9090"
    volumes:
      - caddy_data:/data
      - caddy_config:/config

  backend:
    build:
      dockerfile: Dockerfile
      args:
        VERSION: $VERSION
    environment:
      TRACE: $TRACE
      AUTH0_DOMAIN: $AUTH0_DOMAIN
      AUTH0_CLIENT_ID: $AUTH0_CLIENT_ID
      AUTH0_CLIENT_SECRET: $AUTH0_CLIENT_SECRET
      AUTH0_REALM: $AUTH0_REALM
      AUTH0_ROLES: $AUTH0_ROLES
      REDIS_URL: $REDIS_URL
      SENTRY_DSN: $SENTRY_DSN
      METRICS_SCRAPER_SECRET: $METRICS_SCRAPER_SECRET
    command: ["uvicorn", "--host", "0.0.0.0", "--reload", "--factory", "battleship.server:create_app"]
    volumes:
      - ./battleship:/app/battleship
    depends_on:
      redis:
        condition: service_healthy
    healthcheck:
      test: curl localhost:8000/healthz || exit 1
      timeout: 2s
      interval: 3s

  redis:
    image: redis:7.2.3-alpine
    ports:
      - "6379:6379"
    healthcheck:
      test: redis-cli ping | grep PONG
      interval: 2s
      timeout: 3s

volumes:
  caddy_data:
  caddy_config:
